#
# Makefile:
#
# This makefile build two programs: stenosys, the stenography utility, and dictbuild, a dictionary building utility
# that converts a steno dictionary into a cpp source file for compilation into stenosys. stenosys is therefore
# dependent on dictbuild.
 
CC	    	   := g++

STENOSYS       := stenosys
STENOSYSCLIENT := stenosysclient
DICTBUILD	   := dictbuild

SRCDIR		   := ./src
INCDIR		   := ./src
OBJDIR		   := ./obj
LOGDIR		   := ./log
EXEDIR		   := ./bin
DICTDIR		   := ./dictionary

SRCEXT		   := cpp
OBJEXT		   := o

INC			   := -I/usr/include
DICTIONARY	   := $(DICTDIR)/yttyx-dict.tsv
DICTHASHED	   := $(SRCDIR)/dictionary_i.cpp

# -O0       No optimisation
# -Wall		All warnings

CFLAGS		:= -O0 -g -Wall $(INCLUDE) -pipe -D X11
LDLIBS  	:= -L/usr/lib -L/usr/local/lib -lpthread -lncurses -lm -lX11 -lXtst

# dictionary_i.cpp is generated by running dictbuild
STENOSYS_SOURCES := \
	cmdparser.cpp \
	cmdparserstate.cpp \
	config.cpp \
	dictsearch.cpp \
	dictionary_i.cpp \
	distribution.cpp \
	formatter.cpp \
	geminipr.cpp \
	kbdraw.cpp \
	kbdsteno.cpp \
	keyboard.cpp \
	log.cpp \
	miscellaneous.cpp \
	papertape.cpp \
	state.cpp \
	stenokeyboard.cpp \
	stenosys.cpp \
	stroke.cpp \
	strokefeed.cpp \
	strokes.cpp \
	symbols.cpp \
	tcpserver.cpp \
	timer.cpp \
	textfile.cpp \
	translator.cpp \
	utf8.cpp \
	x11output.cpp

# Precede each source file with the source directory
STENOSYS_SOURCES_DIR := $(patsubst %,$(SRCDIR)/%,$(STENOSYS_SOURCES))
# Create a list of object files with their paths
STENOSYS_OBJECTS := $(patsubst $(SRCDIR)/%,$(OBJDIR)/%,$(STENOSYS_SOURCES_DIR:.$(SRCEXT)=.$(OBJEXT)))

DICTBUILD_SOURCES := \
	cmdparser.cpp \
	cmdparserstate.cpp \
	dictbuild.cpp \
	dictionary.cpp \
	distribution.cpp \
	log.cpp \
	miscellaneous.cpp \
	state.cpp \
	symbols.cpp \
	textfile.cpp \
	utf8.cpp

# Precede each source file with the source directory
DICTBUILD_SOURCES_DIR := $(patsubst %,$(SRCDIR)/%,$(DICTBUILD_SOURCES))
# Create a list of object files with their paths
DICTBUILD_OBJECTS := $(patsubst $(SRCDIR)/%,$(OBJDIR)/%,$(DICTBUILD_SOURCES_DIR:.$(SRCEXT)=.$(OBJEXT)))

.DEFAULT_GOAL := $(STENOSYS)
#.DEFAULT_GOAL := $(STENOSYSCLIENT)


STENOSYSCLIENT_SOURCES := \
	log.cpp \
	miscellaneous.cpp \
	stenosysclient.cpp \
	utf8.cpp \
	window.cpp \
	window_output.cpp \
	window_scroll.cpp

# Precede each source file with the source directory
STENOSYSCLIENT_SOURCES_DIR := $(patsubst %,$(SRCDIR)/%,$(STENOSYSCLIENT_SOURCES))
# Create a list of object files with their paths
STENOSYSCLIENT_OBJECTS := $(patsubst $(SRCDIR)/%,$(OBJDIR)/%,$(STENOSYSCLIENT_SOURCES_DIR:.$(SRCEXT)=.$(OBJEXT)))

# Make the directories
directories:
	@mkdir -p $(EXEDIR)
	@mkdir -p $(OBJDIR)
	@mkdir -p $(LOGDIR)

# Clean only object files
clean:
	@$(RM) -rf $(OBJDIR)
	@$(RM) -rf $(EXEDIR)
	@$(RM) -rf $(LOGDIR)

# Build the dictionary builder utility. Run the dictionary builder to produce $(DICTHASHED),
# a hashed dictionary source file used in the stenosys build
$(DICTHASHED):	$(DICTBUILD_OBJECTS) $(DICTIONARY)
	@echo [link]
	@mkdir -p $(SRCDIR)
	@mkdir -p $(EXEDIR)
	$(CC) -o $(EXEDIR)/$(DICTBUILD) $(DICTBUILD_OBJECTS) $(LDLIBS)
	@$(EXEDIR)/dictbuild

$(STENOSYS):	directories $(DICTHASHED) $(STENOSYS_OBJECTS) 
	@echo [link]
	@mkdir -p $(EXEDIR)
	$(CC) -o $(EXEDIR)/$(STENOSYS) $(STENOSYS_OBJECTS) $(LDLIBS)

$(STENOSYSCLIENT):	directories $(STENOSYSCLIENT_OBJECTS) 
	@mkdir -p $(EXEDIR)
	$(CC) -o $(EXEDIR)/$(STENOSYSCLIENT) $(STENOSYSCLIENT_OBJECTS) $(LDLIBS)

# Compile
$(OBJDIR)/%.$(OBJEXT):	$(SRCDIR)/%.$(SRCEXT)
	@mkdir -p $(dir $@)
	$(CC) $(CFLAGS) $(INC) -c -o $@ $<

all:	$(DICTHASHED) $(STENOSYS) $(STENOSYSCLIENT)
